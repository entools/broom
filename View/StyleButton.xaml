<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Стиль кнопок с автоматическим изменением размером и цвета при наведении-->
    <Style TargetType="{x:Type Button}" x:Key="GetButton">
        <Setter Property="Background" Value="#8942D6"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#9D69D6"/>
            </Trigger>
            <!--<Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#380470"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#8942D6" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="#8942D6"/>

    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxStyle1">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="White" Cursor="Hand">
                        <BulletDecorator.Bullet>

                            <Grid Height="18" Width="18">
                                <!--Define size of the Bullet-->
                                <Rectangle Name="TickMark" Fill="#8942D6" Width="10" Height="10" RadiusX="3" RadiusY="3" Visibility="Hidden"/>
                                <Border CornerRadius="6,0,0,0" BorderBrush="#8942D6" BorderThickness="2" />

                            </Grid>
                        </BulletDecorator.Bullet>

                        <!--Text element-->
                        <Border Background="#8942D6" CornerRadius="0,6,6,0" Height="18">
                            <TextBlock Margin="3,1,0,0" Foreground="#FFFFFFFF" FontFamily="Arial Narrow" FontSize="12">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                    </BulletDecorator>


                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>